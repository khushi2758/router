{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khushi Bera\\\\Downloads\\\\useEffect\\\\router\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  /*if(data.isError) {\r\n    return <p>{data.message}</p>;\r\n  }*/\n  const events = data.events;\n  // const events = data.events; // useLoaderData() returns the data returned by the loader function\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 14\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    //throw { message: 'Could not fetch events.' };\n  } else {\n    //const resData = await response.json();\n    //  return resData.events; // return the data to the loader function\n\n    return response; // return the data to the loader function\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["C:/Users/Khushi Bera/Downloads/useEffect/router/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["\r\nimport { useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n      const data = useLoaderData();\r\n      /*if(data.isError) {\r\n        return <p>{data.message}</p>;\r\n      }*/\r\n      const events = data.events;\r\n      // const events = data.events; // useLoaderData() returns the data returned by the loader function\r\n      return <EventsList events={events} />\r\n\r\n \r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n // return { isError: true, message: 'Could not fetch events.' };\r\n //throw { message: 'Could not fetch events.' };\r\n  } else {\r\n   //const resData = await response.json();\r\n   //  return resData.events; // return the data to the loader function\r\n\r\n\r\n    return response; // return the data to the loader function\r\n    }\r\n\r\n}"],"mappings":";;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B;AACN;AACA;EACM,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B;EACA,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAG3C;AAACN,EAAA,CAXQD,UAAU;EAAA,QAEAJ,aAAa;AAAA;AAAAY,EAAA,GAFvBR,UAAU;AAanB,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACnB;IACA;EAAA,CACE,MAAM;IACN;IACA;;IAGC,OAAOF,QAAQ,CAAC,CAAC;EACjB;AAEJ;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}